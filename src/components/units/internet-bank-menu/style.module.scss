@use 'sass:math';
@use 'src/styles/colors';
@use 'src/styles/mixins';
@use 'src/styles/typography-variables';
@use 'src/styles/variables';

.internet-bank-menu {
  $selector: &;

  @include mixins.media('xs', 'md') {
    display: grid;
    grid-gap: 1.7rem;
    margin-bottom: 3rem;
  }

  @include mixins.media('md', 'infinity') {
    @include mixins.font(typography-variables.$font-body-4);
  }

  position: relative;
  width: min-content;

  &:not(#{$selector}_is-folded) {
    border-color: colors.$green;

    #{$selector}__title {
      opacity: 0.8;
    }

    #{$selector}__icon {
      transform: rotateX(180deg);
    }
  }

  &_base-background-color {
    &_default {
      #{$selector}__list {
        &::before {
          background-color: white;
          box-shadow: 0 30px 30px transparentize(black, 0.85);
        }
      }
    }

    &_deepBlue {
      #{$selector}__list-item {
        color: colors.$text-color_dark-theme;
        opacity: 0.5;

        &:hover {
          color: colors.$text-color_dark-theme;
          opacity: 1;
        }
      }
    }

    &_green {
      #{$selector}__list-item {
        color: colors.$text-color_dark-theme;
        opacity: 0.5;

        &:hover {
          color: colors.$text-color_dark-theme;
          opacity: 1;
        }
      }

      #{$selector}__title {
        background-color: colors.$text-color_dark-theme;
        color: colors.$green;
      }
    }

    $colors: (
      'blue': colors.$blue,
      'darkBlue': colors.$dark-blue,
      'deepBlue': colors.$deep-blue,
      'green': colors.$green,
      'orange': colors.$orange,
      'semiRed': colors.$semi-red,
    );

    @each $color, $color-variable in $colors {
      &_#{$color} {
        #{$selector}__list {
          &::before {
            background-color: $color-variable;
            box-shadow: 0 30px 30px transparentize(black, 0.85);
          }
        }
      }
    }
  }

  &__icon {
    height: 0.9rem;
    transition: transform 0.3s ease-in-out;
    width: 1.5rem;
  }

  &__link {
    font-weight: bold;
    letter-spacing: 0.05em;
    text-decoration: none;
    text-transform: uppercase;
    white-space: nowrap;

    @include mixins.media('xs', 'md') {
      color: colors.$green;

      &::after {
        content: 'â†—';
        position: absolute;
        transform: translate(0.6rem, -0.2rem);
      }
    }

    &:hover {
      opacity: 0.8;
    }
  }

  &__list {
    display: grid;
    left: 2rem;
    min-width: calc(100% - 2rem * 2);
    padding-top: 0.8rem;
    position: absolute;
    row-gap: 2rem;
    transform: translateY(2rem);
    z-index: 1000;

    &::before {
      bottom: -2rem;
      left: -2rem;
      content: '';
      height: calc(100% + 2rem * 2);
      position: absolute;
      width: calc(100% + 2rem * 2);
      z-index: -1;
    }
  }

  &__list-item {
    color: colors.$text-color_light-theme;
    display: block;
    text-decoration: none;
    transition: color 0.3s ease, opacity 0.3s ease;

    &:hover {
      color: colors.$green;
    }
  }

  &__title {
    $font-desktop-button-x-small: 1.5rem, math.div(2.2, 1.5) * 100%;
    $font-mobile-button-x-small: 1rem, math.div(1.4, 1) * 100%;
    $font-button-x-small: $font-desktop-button-x-small, $font-mobile-button-x-small;

    letter-spacing: 0.05em;

    @include mixins.media('md', 'infinity') {
      @include mixins.font($font-button-x-small);

      align-items: center;
      background-color: colors.$green;
      border-radius: 3rem;
      color: white;
      column-gap: 1.2rem;
      cursor: default;
      display: grid;
      font-weight: bold;
      grid-template-columns: 1fr min-content;
      padding: 0.8rem 2rem;
      text-decoration: none;
      text-transform: uppercase;
      white-space: nowrap;
    }
  }
}
